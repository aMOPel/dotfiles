# Named Directories
dotfiles_repo=$XDG_DATA_HOME/chezmoi
dotfiles=~dotfiles_repo/home
# -------------------
# Aliases


alias bins=~/.local/binaries

alias ggb=$dotfiles_repo/bin/get_github_binaries.sh
alias g=lazygit
alias t=taskwarrior-tui
alias r=ranger
#base16
# alias base16="ls ~/.local/base16-builder-python/output/joe/colors | sed -r 's/base16\-(.*)\.jcf/\1/' | fzf | xargs ~/dotfiles/dotfiles/base16/changethemes.sh"

# vim
v () {
if [ -f ./Session.vim ] ; then
  nvim -S Session.vim $@
else
  nvim $@
fi
}

ba () {
cd $HOME/Documents/ba/fomu-trng
task context ba
source ./venv/bin/activate
v -c 'norm \ ft'

}

nt () {
cd $HOME/Documents/learn_nim/tutto.nim
task context nim
v -c 'norm \ ft'

}


vu () {
if [[ -f vue.config.js || -f vite.config.ts ]] ; then
  if top -b -n 1 | grep -iq "npm run dev" ; then ;
  else
    kitty --detach --start-as=minimized npm run dev;
		# kitty --detach --start-as=minimized brave-browser --new-window http://localhost:3000/;
    echo "press enter"; read;
  fi
	v
else
  echo "not a vue project"
fi
}

vuu () {
cd $JSSESSIONS`ls $JSSESSIONS  | fzf`;vu
}

gd () {
if [ -f ./project.godot ] ; then
  if top -b -n 1 | grep -iq godot ; then ;
  else
    kitty @ launch --type tab --cwd current --keep-focus godot --editor
    echo "press enter"; read;
  fi
  task context godot
  v -c 'norm \ ft'

  # if [ -f ./Session.vim ] ; then
  #   NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim -S Session.vim
  # else
  #   NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim
  # fi
else
  echo "not a godot project"
fi
}

gdd () {
cd $GDSESSIONS/`ls $GDSESSIONS/  | fzf`;gd
}

#| sed -r 's/.*_(\w+)_(\w+)\.vim$/\1\/\2/' |
#fd
alias fd='fd --ignore-case --hidden --follow'
alias rg='rg --smart-case --hidden --follow'
alias ghqroot='cd $GHQ_ROOT/github.com; r'
# kitty diff
alias kdiff='kitty +kitten diff'
alias dg='git difftool --no-symlinks --dir-diff'
# --------------------
# Functions
# custom
, () {
  if [[ $(dirs -l) == $(pwd) ]] then
    unsetopt autopushd
    cd ..
  else
    popd
  fi
}
# ranger change directory on "Q" opposing to "q"
function ranger {
  local IFS=$'\t\n'
  local tempfile="$(mktemp -t tmp.XXXXXX)"
  local ranger_cmd=(
    command
    ranger
    --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
  )

  ${ranger_cmd[@]} "$@"
  if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
    cd -- "$(cat "$tempfile")" || return
    command zoxide add "$(cat "$tempfile")"
  fi
  command rm -f -- "$tempfile" 2>/dev/null
}

# --------------------
# # bat
# alias bat='batcat'

# alias sk='screenkey -s small -t 1 --opacity 0.5 --persist'
# alias skk='pkill -f screenkey'

alias gut='godot --debug-collisions --path $PWD -d -s addons/gut/gut_cmdln.gd -gconfig=res://test/.gutconfig.json'
# alias link='rm ../proto-project/in ../proto-projext/Session.vim; ln -sfr . ../proto-project/in'
alias mountwork='sudo mount -o rw,user /dev/nvme0n1p8 ~/work'
alias znotes='cd ~/Documents/ba/repo/notes; v'

# ba
alias fomu_reboot='wishbone-tool 0xe0006000 0xac'
