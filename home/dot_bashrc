# vim:ft=sh

# =============================================================================
# ENV

# clean PATH when in distrobox
if [[ -f /.dockerenv ]]; then
  export PATH="$HOME/bin:$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sbin:/usr/games:/usr/local/games:/snap/bin"
fi

# pager editor etc
export EDITOR=nvim
export PAGER=less
export MANPAGER="nvim +Man!"

# XDG
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache

# bash
export BASH_CONFIG=$XDG_CONFIG_HOME/bash
export INPUTRC=$BASH_CONFIG/inputrc
export HISTFILE=$BASH_CONFIG/.bash_history

# go
export PATH=$HOME/.local/go/bin:$PATH
export GOPATH=$HOME/.local/go

# node
# export PATH=$HOME/.local/npm-global/bin:$PATH
export PATH=$PATH:$HOME/node_modules/.bin
export NPM_CONFIG_PREFIX=$HOME/.local/npm-global

# python
export PYTHONPATH=$HOME/.local/lib/python3.8/site-packages

# nim
export PATH=$HOME/.nimble/bin:$PATH

# rust
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# bat
export BAT_THEME=base16

# timew
export TIMEWARRIORDB=$XDG_DATA_HOME/twarrior/timew

# task
export TASKRC=$XDG_DATA_HOME/twarrior/task/taskrc
export TASKDATA=$XDG_DATA_HOME/twarrior/task

# zoxide
export _ZO_RESOLVE_SYMLINKS=1

# ranger
export RANGER_LOAD_DEFAULT_RC=FALSE

# godot
export GODOT_BIN=$HOME/.local/bin/godot

# =============================================================================
# SETTINGS

export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=10000                   # big big history
export HISTFILESIZE=10000               # big big history
shopt -s histappend                      # append to history, don't overwrite it

# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

shopt -s autocd
shopt -s cdspell
shopt -s dirspell
shopt -s extglob
shopt -s dotglob

set -o vi

# =============================================================================
# other scripts

# enable bash completion in interactive shells
if ! shopt -oq posix; then
 if [ -f /usr/share/bash-completion/bash_completion ]; then
   . /usr/share/bash-completion/bash_completion
 elif [ -f /etc/bash_completion ]; then
   . /etc/bash_completion
 fi
fi

. $BASH_CONFIG/bash_prompt
. $BASH_CONFIG/bash_aliases

ifHasBin () {
bin=$1
thenDo=$2
if [[ $(command -v $bin) ]]; then
  eval $thenDo
else
  echo "$bin not found"
fi
}

# shsh
export SHSH_ROOT="$HOME/.local/share/shsh"
export PATH="$SHSH_ROOT/bin:$PATH"
ifHasBin shsh 'eval "$(shsh init bash)"'

# setup kitty only if using distrobox and inside box
if [[ $(command -v distrobox) || $(command -v distrobox-export) ]]; then
  if [[ -f /.dockerenv ]]; then
    ifHasBin kitty 'kitty + complete setup bash | source /dev/stdin'
    export LANG=en_US.UTF-8
    [ "$(pwd)" == "/run/host/home/$USER" ] && cd ~
  fi
else
  ifHasBin kitty 'kitty + complete setup bash | source /dev/stdin'
fi

# zoxide
ifHasBin zoxide 'eval "$(zoxide init bash)"'
# direnv
ifHasBin direnv 'eval "$(direnv hook bash)"'
# fzf
if [[ -f $HOME/.fzf.bash ]]; then 
  . $HOME/.fzf.bash
  export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}'"
  export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window up:3:hidden:wrap"
  export FZF_ALT_C_OPTS="--preview 'tree -C {}'"

  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS"\
" --color=bg+:#353b45,bg:#282c34,spinner:#56b6c2,hl:#61afef"\
" --color=fg:#565c64,header:#61afef,info:#e5c07b,pointer:#56b6c2"\
" --color=marker:#56b6c2,fg+:#b6bdca,prompt:#e5c07b,hl+:#61afef"
fi

# github cli
ifHasBin gh 'eval "$(gh completion -s bash)"'
